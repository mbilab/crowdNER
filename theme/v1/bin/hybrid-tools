#!/usr/local/bin/lsc

require! <[fs]>

opt =
  code: event: 2 ignored: 0 normal: -1 protein: 1
  min-conf: 1
  path: res: \../res tools: \../tools
  tools: fs.readdir-sync \../tools/
<<< require \node-getopt .create [
  * [\b , \benchmark   , 'verify words in benchmark sentences']
  * [\c , \minConf=ARG , "specify the minimum confidence (default: #{opt.min-conf})"]
  * [\h , \help        , 'show this help']
  * [\t , \tools=ARG+  , "specify automatic tools (default: #{opt.tools * ', '})"]
] .bind-help '\nUsage: lsc hybrid-tools\n[[OPTIONS]]\n' .parse-system!options
opt.min-conf = parseInt opt.min-conf

gs-answer = JSON.parse fs.read-file-sync "#{opt.path.res}/gs-answer.json" \utf-8
benchmark = JSON.parse fs.read-file-sync "#{opt.path.res}/benchmark-stcs.json" \utf-8

hybrid-rlt = {}
verify-rlt = tp: 0 fp: 0 fn: 0 tn: 0

for tool in opt.tools
  for pmid, stcs of JSON.parse fs.read-file-sync "#{opt.path.tools}/#tool/predict.mia.json" \utf-8
    for stcid, stc of stcs
      for wid, label of stc
        continue if opt.code.protein isnt label

        hybrid-rlt[pmid] ?= {}
        hybrid-rlt[pmid][stcid] ?= {}
        hybrid-rlt[pmid][stcid][wid] ?= 0
        hybrid-rlt[pmid][stcid][wid]++

for pmid, stcs of gs-answer.box1
  for stcid, stc of stcs
    continue if opt.benchmark and not benchmark[pmid][stcid]

    for wid, label of stc
      continue if opt.code.ignored is label

      if hybrid-rlt[pmid][stcid] and hybrid-rlt[pmid][stcid][wid] >= opt.min-conf
        if opt.code.protein is label then verify-rlt.tp++
        else                              verify-rlt.fp++
      else
        if opt.code.protein is label then verify-rlt.fn++
        else                              verify-rlt.tn++

verify-rlt.rec = verify-rlt.tp / (verify-rlt.tp + verify-rlt.fn)
verify-rlt.pre = verify-rlt.tp / (verify-rlt.tp + verify-rlt.fp)
verify-rlt.f-score = 2 * verify-rlt.pre * verify-rlt.rec / (verify-rlt.pre + verify-rlt.rec)

fs.write-file-sync "#{opt.path.res}/verify/NER/hybrid-tools-rlt.json" JSON.stringify hybrid-rlt, null 2

console.log JSON.stringify verify-rlt, null 2

# vi:et:ft=ls
